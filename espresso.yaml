blueprint:
  name: ☕ Coffee v1.4 (Smarter Notifications + Cost Insights + Currency Support)
  description: >
    Advanced coffee machine automation with smarter notifications, 
    energy monitoring, cost insights in USD or EUR, and context-driven notifications. 
    Features include schedule-based or wattage-based triggering, 
    auto-shutoff, user cancel capabilities, and manual or automatic warmup detection. 📅☕⚡
  domain: automation
  input:
    coffee_switch:
      name: Coffee Machine Switch
      description: Switch entity to control your coffee machine. 🔌
      selector:
        entity:
          domain: switch
    wattage_sensor:
      name: Wattage Sensor
      description: >
        Energy monitoring sensor for wattage-based warmup detection and
        cost insights. ⚡
      selector:
        entity:
          domain: sensor
          device_class: power
    energy_rate_usd:
      name: Electricity Rate in USD (per kWh)
      description: >
        The cost of electricity per kilowatt-hour in USD (e.g., 0.12 for $0.12 per kWh). 💵
      default: 0.12
      selector:
        number:
          min: 0.01
          max: 1.00
          step: 0.01
          unit_of_measurement: USD/kWh
    energy_rate_eur:
      name: Electricity Rate in EUR (per kWh)
      description: >
        The cost of electricity per kilowatt-hour in EUR (e.g., 0.10 for €0.10 per kWh). 💶
      default: 0.10
      selector:
        number:
          min: 0.01
          max: 1.00
          step: 0.01
          unit_of_measurement: EUR/kWh
    currency:
      name: Currency
      description: >
        Choose the currency to display the cost insights in (USD or EUR). 💵💶
      default: USD
      selector:
        select:
          options:
          - label: USD ($)
            value: USD
          - label: EUR (€)
            value: EUR
    notification_device:
      name: Notification Device
      description: Mobile device to send notifications (must be connected to the Home Assistant app). 📱
      selector:
        device:
          integration: mobile_app
    person_home:
      name: Person Home
      description: Check if a specific person is home before triggering the coffee machine. 🏡
      selector:
        entity:
          domain: person
    first_message:
      name: First Notification Message
      description: >
        Default message when the coffee machine is warmed up and ready.
        This message may be overridden dynamically based on time of day. 📩
      default: "Your coffee machine is ready to brew! ☕"
      selector:
        text:
          multiline: false
    idle_message:
      name: Idle Notification Message
      description: Reminder that your coffee machine will turn off soon. 📩
      default: "Your coffee machine will turn off soon! Last chance for coffee! ☕📴"
      selector:
        text:
          multiline: false
    shutdown_message:
      name: Final Shutdown Notification
      description: >
        Message sent when the coffee machine turns off along with the
        cost of coffee preparation based on energy usage. 💵📩
      default: >
        "Your coffee machine has been turned off. Enjoy your coffee! ☕"
      selector:
        text:
          multiline: false

variables:
  coffee_switch: !input coffee_switch
  wattage_sensor: !input wattage_sensor
  energy_rate_usd: !input energy_rate_usd
  energy_rate_eur: !input energy_rate_eur
  currency: !input currency
  notification_device: !input notification_device
  person_home: !input person_home
  first_message: !input first_message
  idle_message: !input idle_message
  shutdown_message: !input shutdown_message

trigger:
  # Triggered when the coffee machine is turned 'on'
  - platform: state
    entity_id: !input coffee_switch
    to: 'on'

condition:
  # Ensure the person defined in the blueprint input is home
  - condition: state
    entity_id: !input person_home
    state: 'home'

action:
  # Store the initial energy reading for cost calculation
  - variables:
      start_energy: "{{ states(wattage_sensor) | float(0) }}"

  # Send time-of-day-customized notification
  - service: notify.mobile_app_<YOUR_DEVICE_ID>  # Replace with proper device ID
    data:
      title: "Coffee Machine is Ready"
      message: >
        {% if now().hour < 12 %}
          Good morning! Your coffee machine is ready to brew ☕.
        {% elif now().hour < 18 %}
          Coffee break time! Your coffee machine is warmed up ☕.
        {% else %}
          Evening coffee alert! Your coffee machine is ready to brew ☕.
        {% endif %}

  # Wait for the user to brew their coffee
  - delay: "00:15:00"  # Time delay before sending the idle notification (customize as necessary)

  # Send idle notification
  - service: notify.mobile_app_<YOUR_DEVICE_ID>  # Replace with proper device ID
    data:
      title: "Coffee Machine Reminder"
      message: "{{ idle_message }}"

  # Final shutdown delay
  - delay: "00:05:00"

  # Calculate energy usage and cost dynamically based on selected currency
  - variables:
      end_energy: "{{ states(wattage_sensor) | float(0) }}"
      energy_used_kwh: >
        {{ ((end_energy - start_energy) / 1000) | round(3) }}
      energy_cost_usd: >
        {{ (energy_used_kwh * energy_rate_usd) | round(2) }}
      energy_cost_eur: >
        {{ (energy_used_kwh * energy_rate_eur) | round(2) }}

  # Turn off the coffee machine
  - service: switch.turn_off
    target:
      entity_id: !input coffee_switch

  # Notify with final shutdown message including cost insights
  - service: notify.mobile_app_<YOUR_DEVICE_ID>  # Replace with proper device ID
    data:
      title: "Coffee Machine Turned Off"
      message: >
        {{ shutdown_message }}
        {% if energy_used_kwh > 0 %}
          {% if currency == 'USD' %}
            Total energy used: {{ energy_used_kwh }} kWh. Cost: ${{ energy_cost_usd }} USD. 💵
          {% elif currency == 'EUR' %}
            Total energy used: {{ energy_used_kwh }} kWh. Cost: €{{ energy_cost_eur }} EUR. 💶
          {% else %}
            Total energy used: {{ energy_used_kwh }} kWh. Cost not calculated due to unsupported currency.
          {% endif %}
        {% else %}
          No energy usage detected for cost calculation.
        {% endif %}
